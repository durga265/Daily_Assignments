1. What is JavaScript?
    Add functionality with the help of JavaScript.
    JavaScript is a powerful and versatile programming language that plays a crucial role in modern web development both on the client and server sides. and its mainly used for enhancing the interation of a user with the webpage.
    -It was written in 10 days by Brenden Eich at Netscape (it means internet explorer) in 1995 to make web pages interactive. 
    -It quickly evolved got standardized as ECMAScript(European Computer Manufacture's Association) and becme a key player in web development.
    -It updates continue to enhance tha language,making javascript crucial for modern web development. A new feature on the javascript is launch there and that will be called as ECMAScript, because of this javascript is popular.

2. What are the data types in JavaScript?
Two types of data types in javascript
I. Primitive Data types
    -primitive data types are simple, basic data types that represents single values and their values cannot be changed once they are created
    1.string
    2.number
    3.Boolean
    4.Null
    5.Undefined
    6.BigInt
    6.Symbol


    //string
        let b="hello world";
        console.log(b);
        console.log(typeof b);
    //number
        let a=23;
        console.log(a);
        console.log(typeof a)
    //boolean true=1 false=0
        let c=false;
        console.log(c);
        console.log(typeof c);
    // null
        let d=null;
        console.log(d);
        console.log(typeof d); // datatype is object not null
    // undefines
        let e=undefined;
        console.log(e);
        console.log(typeof e);
    //BigInt
        let bigNumber=BigInt(101824747835789368808653566634333234);
        console.log(bigNumber);
    //Symbol
        let symbol1 = Symbol('primitive');
        let symbol2 = Symbol('primitive');
        console.log(symbol1 === symbol2); 

II. Non-primitive Data types
    -It can hold multiple values and their values can be changed
    1.Array
    2.Object

    // Array
        let k=[1,3,4,56,8];
        console.log(k);
        console.log(typeof k);
        console.log(Array.isArray(k));
    //Object
        let person={
            "name":"dev",
            "age":26,
            "isstudent":true
        }
        console.log(person);
        console.log(typeof person);

3. What is the DOM?
    DOM is like arranging in the frm of tree and it used for if you are selecting any particular tag by selecting that tag and we can apply some effects.

    Javascript provides different methods to access the elements in the DOM, such as
    1.getElementById
    2.getElementsByClassName
    3.getElementsByTagName
    4.querySelector
    5.querySelectorAll

4. Explain the difference between null and undefined
    Null value is defined but empty but in undefine value is not defined but declared
    //null
    let value = null;
    //undefined
    let value;

5. What is the difference between let, const, and var?

    var- It can be redeclare and reassign this is the disadvantag of var keyword and it is functioned scope
    //ex: var x=12;
        console.log(x);

    let - can be reassign and cannot be redeclared and it is a block scope
    /ex: let a=2;
         let b=3;
         let c=a+b;
         console.log(c);

    const- const is cannot be reintialized and reassign is not possible
    //ex: const pi =3.14;
    console.log(pi);

    // const pi=3.14;
    console.log(pi);
    pi=pi+10;
    console.log(pi);


6. What is hoisting in JavaScript?
    //Hoisting is the variable and function declarations are the moved to the top of the program.

    // using var
    console.log("Hoist")
    var Hoist="string"
    //using const
    console.log("Hoist")
    const Hoist3="String"
    //using let
    console.log("Hoist1")
    let Hoist1="String"

7. What is the difference between == and ===?
    strict equality(===)- Both numbers should be equal wih same data type
    abstract equality(==)- Compare if the value is equal

    let value1=6;
    let value2='6';
    if(value1==value2){
        console.log('equal');
    }else if(value1===value2){
        console.log('equality')
    }

8. Explain the difference between forEach, map, filter, and reduce
methods.

//FoREach: Is used to iterate over an array
        let fruits=['apple','banana','mango'];
        let frui=fruits.forEach(fruit=>{
            console.log(fruit)
        })

//Map: map is a collection of key/value pairs and It is used to iterate over all the elements in an array,which results in a new array.
        let num=[1,2,3,4,5];
        let dubnum=num.map(dbl=>dbl*2);
        console.log(dubnum);
    
        changing string to upper case
        let fruit=['apple','banana','kiwi'];
        let strchn=fruit.map(str=>str.toLocaleUpperCase());
        console.log(strchn);

//filter: Is used to filetering of an array
    filter method
        let number1=[1,2,3,4,5,6,7,8,9,10];
        let even=number1.filter(num=>num%2===0)
        console.log(even)

    //filtering with string
        let fruitsfi=['apple','banana','papaya','kiwi','orange'];
        let filfruits=fruitsfi.filter(fil=>fil.length<=4);
        console.log(filfruits)

//reduce:
        let numbers =[1,2,3,55.5,22,8,9.8,44];
        let sum=numbers.reduce(
        (accumulator, currentvalue) => previousvalue + cuurentvalue,0);
        console.log(sum);

9. Explain about call, apply, and bind methods.

//call- it uses to invoke a function with this object and argument
//apply- it works same as call and allows you to pass the argument is an aray
//bind- using bind we will give you a new instance of object

let user1 = {
    name:"dev",
    age:25,
    isStudent:true,
    city:"hyderabad",
};

let user2 = {
    name:"devi",
    age:35,
    isStudent:true,
    city:"kolkata",
};
function displayDetails(company, designation){
    console.log("Hello inside constructor function",this);
    console.log(this.name + 'is of age '+this.age, company, designation);

}
displayDetails.call(user1, 'microsoft', 'frontend');
displayDetails.apply(user2,["tcs", "fullstack"]);
const displayBind = displayDetails.bind(user1);
displayBind("Amazon", "wipro");